syntax = "proto3";

package io.github.jedvardsson.fuelcost.v1;

option java_multiple_files = true;
option java_package = "io.github.jedvardsson.fuelcost.v1";
option java_outer_classname = "VehicleProto";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service VehicleService {
  option (google.api.default_host) = "fuelcost.jedvardsson.github.io";

  rpc CreateVehicle(CreateVehicleRequest) returns (Vehicle) {
    option (google.api.http) = {
      post: "/v1/{parent=accounts/*/vehicles}"
      body: "vehicle"
    };
    option (google.api.method_signature) = "parent,vehicle_id,vehicle";
  }
  rpc UpdateVehicle(UpdateVehicleRequest) returns (Vehicle) {
    option (google.api.http) = {
      patch: "/v1/{vehicle.name=accounts/*/vehicles/*}"
      body: "vehicle"
    };
    option (google.api.method_signature) = "vehicle";
  }
  rpc DeleteVehicle(DeleteVehicleRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/{name=accounts/*/vehicles/*}"
    };
    option (google.api.method_signature) = "name";
  }
  rpc GetVehicle(GetVehicleRequest) returns (Vehicle) {
    option (google.api.http) = {
      get: "/v1/{name=accounts/*/vehicles/*}"
    };
    option (google.api.method_signature) = "name";
  }
  rpc ListVehicles(ListVehiclesRequest) returns (ListVehiclesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=accounts/*/vehicles}"
    };
    option (google.api.method_signature) = "parent";
  }
}


message CreateVehicleRequest {
  // The parent resource where this vehicle will be created.
  // Format: `accounts/{account}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "fuelcost.jedvardsson.github.io/Account"
    }];
  // The vehicle to create.
  Vehicle vehicle = 2 [(google.api.field_behavior) = REQUIRED];
}

message UpdateVehicleRequest {
  // The vehicle to update or create.
  Vehicle vehicle = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteVehicleRequest {
  // Required. Name of the vehicle to delete.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "fuelcost.jedvardsson.github.io/Vehicle"
  ];

  // Optional. The etag known to the client for the expected state.
  // Used for optimistic locking.
  string etag = 2 [(google.api.field_behavior) = OPTIONAL];
}

message GetVehicleRequest {
  // The name of the vehicle to retrieve.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "fuelcost.jedvardsson.github.io/Vehicle"
  ];
}

message ListVehiclesRequest {
  // The parent collection
  // Format: `accounts/{account}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "fuelcost.jedvardsson.github.io/Account"
    }];

  // Maximum number of vehicles to return.
  int32 page_size = 2;

  // The value returned by the last `ListVehiclesResponse`; indicates that this is
  // a continuation of a prior `ListVehicles` call, and that the system should
  // return the next page of data.
  string page_token = 3;
}

// Response for [InventoryService.ListVehicles][com.tele2.tv.inventory.v1.InventoryService.ListVehicles]
message ListVehiclesResponse {
  // The resulting vehicles.
  repeated Vehicle vehicles = 1;

  // If not empty, indicates that there may be more topics that match the
  // request; this value should be passed in a new `ListVehiclesRequest`.
  string next_page_token = 2;
}


message Vehicle {
  option (google.api.resource) = {
    type: "fuelcost.jedvardsson.github.io/Vehicle"
    pattern: "accounts/{account}/vehicles/{vehicle}"
  };

  // The resource name of the vehicle of the form `accounts/{account}/vehicles/{vehicle}`.
  string name = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference).type = "fuelcost.jedvardsson.github.io/Vehicle"
  ];

  google.protobuf.Timestamp create_time = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  google.protobuf.Timestamp update_time = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The etag for this account.
  // If this is provided on update, it must match the server's etag.
  string etag = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The human-readable name of the vehicle. Max length 30.
  string display_name = 6;
}

